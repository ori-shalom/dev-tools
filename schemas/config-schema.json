{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "properties": {
    "service": {
      "description": "Service name",
      "type": "string"
    },
    "functions": {
      "description": "Lambda functions configuration",
      "type": "object",
      "propertyNames": {
        "type": "string"
      },
      "additionalProperties": {
        "type": "object",
        "properties": {
          "handler": {
            "description": "Path to handler function (e.g., src/handlers/users.handler)",
            "type": "string"
          },
          "events": {
            "description": "List of events that trigger this function (optional for programmatically invoked functions)",
            "default": [],
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "http"
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "PATCH",
                        "HEAD",
                        "OPTIONS",
                        "ANY"
                      ]
                    },
                    "path": {
                      "description": "API Gateway path with optional parameters (e.g., /users/{id})",
                      "type": "string"
                    },
                    "cors": {
                      "description": "Enable CORS for this endpoint",
                      "default": true,
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "type",
                    "method",
                    "path"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "websocket"
                    },
                    "route": {
                      "description": "WebSocket route (e.g., $connect, $disconnect, message)",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "route"
                  ]
                }
              ]
            }
          },
          "environment": {
            "description": "Environment variables for this function",
            "type": "object",
            "propertyNames": {
              "type": "string"
            },
            "additionalProperties": {
              "type": "string"
            }
          },
          "timeout": {
            "description": "Function timeout in seconds (1-900)",
            "default": 30,
            "type": "number",
            "minimum": 1,
            "maximum": 900
          },
          "memorySize": {
            "description": "Memory size in MB (128-10240)",
            "default": 1024,
            "type": "number",
            "minimum": 128,
            "maximum": 10240
          }
        },
        "required": [
          "handler"
        ]
      }
    },
    "environment": {
      "description": "Global environment variables applied to all functions",
      "type": "object",
      "propertyNames": {
        "type": "string"
      },
      "additionalProperties": {
        "type": "string"
      }
    },
    "server": {
      "default": {
        "port": 3000,
        "host": "localhost",
        "cors": true,
        "websocket": {
          "port": 3001,
          "pingInterval": 30000
        }
      },
      "type": "object",
      "properties": {
        "port": {
          "description": "Local server port",
          "default": 3000,
          "type": "number",
          "minimum": 1000,
          "maximum": 65535
        },
        "host": {
          "description": "Local server host",
          "default": "localhost",
          "type": "string"
        },
        "cors": {
          "description": "Enable CORS globally",
          "default": true,
          "type": "boolean"
        },
        "websocket": {
          "default": {
            "port": 3001,
            "pingInterval": 30000
          },
          "type": "object",
          "properties": {
            "port": {
              "description": "WebSocket server port",
              "default": 3001,
              "type": "number",
              "minimum": 1000,
              "maximum": 65535
            },
            "pingInterval": {
              "description": "WebSocket ping interval in ms",
              "default": 30000,
              "type": "number",
              "minimum": 1000
            }
          }
        }
      }
    },
    "build": {
      "default": {
        "outDir": "./dist",
        "target": "node18",
        "minify": true,
        "sourcemap": false,
        "external": []
      },
      "type": "object",
      "properties": {
        "outDir": {
          "description": "Output directory for built lambdas",
          "default": "./dist",
          "type": "string"
        },
        "target": {
          "description": "Node.js target version",
          "default": "node18",
          "type": "string"
        },
        "minify": {
          "description": "Minify the built code",
          "default": true,
          "type": "boolean"
        },
        "sourcemap": {
          "description": "Generate source maps",
          "default": false,
          "type": "boolean"
        },
        "external": {
          "description": "External dependencies to exclude from bundle",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "required": [
    "service",
    "functions"
  ]
}